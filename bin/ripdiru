#!/usr/bin/env ruby

require 'net/https'
require 'uri'
require 'pathname'
require 'base64'
require 'open-uri'
require 'date'
require 'fileutils'

class DownloadTask

  PLAYER_URL = "http://radiko.jp/player/swf/player_3.0.0.01.swf"
  TMPDIR = ENV['TMPDIR'] || '/tmp'

  attr_accessor :station, :cache, :buffer, :outdir, :bitrate

  def initialize(station = nil, duration = 1800, *args)
    unless station
      abort "Usage: ripdiko [station-id]"
    end
    @station = station
    @duration = duration
    @cache = CacheDir.new(TMPDIR)
    @buffer = ENV['RIPDIKO_BUFFER'] || 60
    @outdir = ENV['RIPDIKO_OUTDIR'] || "#{ENV['HOME']}/Music/Radiko"
    @bitrate = ENV['RIPDIKO_BITRATE'] || '64k'
  end

  def run
    duration = #second argument

    tempfile = "#{TMPDIR}/#{program.id}.mp3"
    puts "Streaming #{program.title} ~ #{program.to.strftime("%H:%M")} (Recording duration: #{duration}s)"
    puts "Ripping audio file to #{tempfile}"

    command = %W(
      rtmpdump --live --quiet
      -r rtmpe://w-radiko.smartstream.ne.jp
      --playpath simul-stream.stream
      --app #{station}/_definst_
      -W #{PLAYER_URL}
      -C S:"" -C S:"" -C S:"" -C S:#{token}
      --live --stop #{duration} -o - |
      ffmpeg -y -i - -vn
      -loglevel error
      -metadata author="#{program.performer}"
      -metadata artist="#{program.station}"
      -metadata title="#{program.title} #{program.effective_date.strftime}"
      -metadata album="#{program.title}"
      -metadata genre=Radio
      -metadata year="#{program.effective_date.year}"
      -acodec libmp3lame -ar 44100 -ab #{bitrate} -ac 2
      #{tempfile}
    )

    system command.join(" ")

    FileUtils.mkpath(outdir)
    File.rename tempfile, "#{outdir}/#{program.id}.mp3"

  end

  def abort(msg)
    puts msg
    exit 1
  end
end

class CacheDir
  attr_accessor :dir
  def initialize(dir)
    @dir = dir
    @paths = {}
  end

  def [](name)
    @paths[name] ||= Pathname.new(File.join(@dir, name))
  end
end

DownloadTask.new(*ARGV).run
